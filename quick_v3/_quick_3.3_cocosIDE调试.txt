
1. 在 Code IDE 中导入 Quick 工程：
	启动 Code IDE 后，选择菜单 File -> Import -> Cocos -> Import Cocos Project，并选择待调试工程的目录.
	
	刚导入后可能会看到无法显示中文而报错，是因为编码的问题。修改如下菜单： 项目->属性 选中打开的面板左边 资源 项， 
	修改文本文件编码格式为 UTF-8即可。
	如果问题还在，可是修改文件使之重新编译该文件即可
	
2. 设置调试参数

	在 IDE 界面的左边工程列表，右键点击待调试的项目，然后选择菜单： 运行方式-->运行配置， 打开设置界面。
	在设置界面左侧的 Cocos Luabinding 组可看到当前工程，
	在右边选择 远程调试 ，
	平台：选 Mac 或 Windows
	Host IP 和 Target IP 均设置为 127.0.0.1
	点击 "应用" 按钮保存设置。
	
3. 配合 Visual Studio 和 Code IDE 进行 C++ 和 Lua 联调 

	用 VS 打开 quick\player\proj.win32\player3.sln 工程
	选择 player3 项目
	选择菜单 Project -> Properties，打开 Project Property 对话框
	从对话框左侧选中 Configuration Properties / Debugging
	从右侧选中 Command Arguments，并添加命令参数内容: 
	-debugger-codeide -workdir D:\hlb\lianliankan2\lianliankan2

4. 设置完成后用 VS 运行 player (首次运行需要执行编译)
	在 player 启动后切换到 Code IDE 设置断点后， 在工具栏点击按钮 Debug Remote(远程调试) ， 
	在调试期间，如果遇到 Lua 代码中设置的断点，则切换到 Code IDE 查看断点情况；如果遇到 C++ 断点，则切换到 VS 查看断点情况。